---
description:
globs:
alwaysApply: false
---
## Key Principles
- We will only have one django app, called 'core'. Everything about our webapp will be here
- Use Django's built-in features and tools wherever possible
- Prioritize readability and maintainability; follow PEP 8
- Use descriptive variable/function names with underscores
- Use Django templates for HTML, django-ninja for APIs
- Keep business logic in models/forms
- Keep views focused on request handling

## Django/Python
- Use CBVs for complex views; FBVs for simpler logic
- Leverage Django's ORM; avoid raw SQL when possible
- Use Django's built-in user model and authentication
- Utilize Django form/model form classes
- Follow MVT pattern strictly


## API Development
- Use django-ninja instead of DRF
- django-ninja generate openapi documentation, so make sure to populate views with relevant data in order for it to hsow up in the OpenAPI docs.
- Use Pydantic models for schema validation
- Use django-ninja's authentication classes

## Workers
- Use django-q2 syntax for workers
